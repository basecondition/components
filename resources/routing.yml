# NOTE: This file is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen
# Do not edit the class manually.

# article
bsc_article_getarticle:
    path:     /article/{id}
    methods:  [GET]
    defaults:
        _controller: bsc.controller.article:getArticleAction
    requirements:
        id: '\d+'

# consulting
bsc_consulting_adddate:
    path:     /consulting
    methods:  [POST]
    defaults:
        _controller: bsc.controller.consulting:addDateAction

bsc_consulting_deletedate:
    path:     /consulting/{id}
    methods:  [DELETE]
    defaults:
        _controller: bsc.controller.consulting:deleteDateAction
    requirements:
        id: '\d+'

bsc_consulting_getdate:
    path:     /consulting/{id}
    methods:  [GET]
    defaults:
        _controller: bsc.controller.consulting:getDateAction
    requirements:
        id: '\d+'

bsc_consulting_getoverview:
    path:     /consulting
    methods:  [GET]
    defaults:
        _controller: bsc.controller.consulting:getOverviewAction

bsc_consulting_updatedate:
    path:     /consulting/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.consulting:updateDateAction
    requirements:
        id: '\d+'

# event
bsc_event_getavailableevents:
    path:     /events/available
    methods:  [GET]
    defaults:
        _controller: bsc.controller.event:getAvailableEventsAction

bsc_event_getevent:
    path:     /event/{id}
    methods:  [GET]
    defaults:
        _controller: bsc.controller.event:getEventAction
    requirements:
        id: '\d+'

bsc_event_hide:
    path:     /events/hide/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.event:hideAction
    requirements:
        id: '\d+'

bsc_event_submitcode:
    path:     /code
    methods:  [POST]
    defaults:
        _controller: bsc.controller.event:submitCodeAction

bsc_event_subscribe:
    path:     /events/subscribe/{id}
    methods:  [POST]
    defaults:
        _controller: bsc.controller.event:subscribeAction
    requirements:
        id: '\d+'

bsc_event_unhide:
    path:     /events/unhide/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.event:unhideAction
    requirements:
        id: '\d+'

bsc_event_unsubscribe:
    path:     /events/unsubscribe/{id}
    methods:  [POST]
    defaults:
        _controller: bsc.controller.event:unsubscribeAction
    requirements:
        id: '\d+'

# heartbeat
bsc_heartbeat_getheartbeat:
    path:     /heartbeat
    methods:  [GET]
    defaults:
        _controller: bsc.controller.heartbeat:getHeartbeatAction

# member
bsc_member_deletemember:
    path:     /member
    methods:  [DELETE]
    defaults:
        _controller: bsc.controller.member:deleteMemberAction

bsc_member_deletememberbyemail:
    path:     /member/delete_by_email
    methods:  [GET]
    defaults:
        _controller: bsc.controller.member:deleteMemberByEmailAction

bsc_member_getcheckinlog:
    path:     /member/checkins
    methods:  [GET]
    defaults:
        _controller: bsc.controller.member:getCheckinLogAction

bsc_member_getmemberbytoken:
    path:     /member
    methods:  [GET]
    defaults:
        _controller: bsc.controller.member:getMemberByTokenAction

bsc_member_gettimesheet:
    path:     /member/timesheet
    methods:  [GET]
    defaults:
        _controller: bsc.controller.member:getTimeSheetAction

bsc_member_setpassword:
    path:     /member/password
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.member:setPasswordAction

bsc_member_updatememberbytoken:
    path:     /member
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.member:updateMemberByTokenAction

# message
bsc_message_getconversation:
    path:     /message/{id}
    methods:  [GET]
    defaults:
        _controller: bsc.controller.message:getConversationAction
    requirements:
        id: '\d+'

bsc_message_getconversations:
    path:     /messages
    methods:  [GET]
    defaults:
        _controller: bsc.controller.message:getConversationsAction

bsc_message_getunreadconversations:
    path:     /messages/unread
    methods:  [GET]
    defaults:
        _controller: bsc.controller.message:getUnreadConversationsAction

bsc_message_markconversationread:
    path:     /message/read/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.message:markConversationReadAction
    requirements:
        id: '\d+'

bsc_message_sendmessage:
    path:     /message
    methods:  [POST]
    defaults:
        _controller: bsc.controller.message:sendMessageAction

bsc_message_sendreply:
    path:     /message/{id}
    methods:  [POST]
    defaults:
        _controller: bsc.controller.message:sendReplyAction
    requirements:
        id: '\d+'

# milestone
bsc_milestone_createmilestone:
    path:     /member/milestone
    methods:  [POST]
    defaults:
        _controller: bsc.controller.milestone:createMilestoneAction

bsc_milestone_deletemembermilestonebyid:
    path:     /member/milestone/{id}
    methods:  [DELETE]
    defaults:
        _controller: bsc.controller.milestone:deleteMemberMilestoneByIdAction
    requirements:
        id: '\d+'

bsc_milestone_getmembermilestone:
    path:     /member/milestone/{id}
    methods:  [GET]
    defaults:
        _controller: bsc.controller.milestone:getMemberMilestoneAction
    requirements:
        id: '\d+'

bsc_milestone_getmembermilestones:
    path:     /member/milestones
    methods:  [GET]
    defaults:
        _controller: bsc.controller.milestone:getMemberMilestonesAction

bsc_milestone_membertypes:
    path:     /types
    methods:  [GET]
    defaults:
        _controller: bsc.controller.milestone:memberTypesAction

bsc_milestone_updatemilestone:
    path:     /member/milestone/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.milestone:updateMilestoneAction
    requirements:
        id: '\d+'

# notification
bsc_notification_getnotifications:
    path:     /notifications
    methods:  [GET]
    defaults:
        _controller: bsc.controller.notification:getNotificationsAction

bsc_notification_getunreadnotifications:
    path:     /notifications/unread
    methods:  [GET]
    defaults:
        _controller: bsc.controller.notification:getUnreadNotificationsAction

bsc_notification_marknotificationread:
    path:     /notification/read/{id}
    methods:  [PATCH]
    defaults:
        _controller: bsc.controller.notification:markNotificationReadAction
    requirements:
        id: '\d+'

# password
bsc_password_passwordreset:
    path:     /password/reset
    methods:  [POST]
    defaults:
        _controller: bsc.controller.password:passwordResetAction

bsc_password_passwordresetset:
    path:     /password/reset/set
    methods:  [POST]
    defaults:
        _controller: bsc.controller.password:passwordResetSetAction

# registration
bsc_registration_createmember:
    path:     /register
    methods:  [POST]
    defaults:
        _controller: bsc.controller.registration:createMemberAction

bsc_registration_resendverifytan:
    path:     /register/resend
    methods:  [POST]
    defaults:
        _controller: bsc.controller.registration:resendVerifyTanAction

bsc_registration_verifymember:
    path:     /register/verify
    methods:  [POST]
    defaults:
        _controller: bsc.controller.registration:verifyMemberAction

# structure
bsc_structure_dictionaryget:
    path:     /dictionary
    methods:  [GET]
    defaults:
        _controller: bsc.controller.structure:dictionaryGetAction

bsc_structure_geteventmaincategories:
    path:     /structure/events
    methods:  [GET]
    defaults:
        _controller: bsc.controller.structure:getEventMainCategoriesAction

bsc_structure_getmilestonestructure:
    path:     /structure/milestones
    methods:  [GET]
    defaults:
        _controller: bsc.controller.structure:getMilestoneStructureAction

# timeline
bsc_timeline_timeline:
    path:     /member/timeline
    methods:  [GET]
    defaults:
        _controller: bsc.controller.timeline:timelineAction

# token
bsc_token_isloggedin:
    path:     /logged_in
    methods:  [GET]
    defaults:
        _controller: bsc.controller.token:isloggedInAction

bsc_token_logout:
    path:     /logout
    methods:  [GET]
    defaults:
        _controller: bsc.controller.token:logoutAction

bsc_token_token:
    path:     /token
    methods:  [POST]
    defaults:
        _controller: bsc.controller.token:tokenAction

