<?php
/**
 * ConsultingOverview
 *
 * PHP version 5
 *
 * @category Class
 * @package  BSC\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BSC API
 *
 * BSC API
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BSC\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ConsultingOverview model.
 *
 * @package BSC\Model
 * @author  Swagger Codegen team
 */
class ConsultingOverview 
{
        /**
     * bubble title (consulting menu)
     *
     * @var string|null
     * @SerializedName("title")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $title;

    /**
     * title of info-card
     *
     * @var string|null
     * @SerializedName("headline")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $headline;

    /**
     * intro text inside info-card / description
     *
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * pairs of label, value
     *
     * @var BSC\Model\ConsultingOverviewFacts[]|null
     * @SerializedName("facts")
     * @Assert\All({
     *   @Assert\Type("BSC\Model\ConsultingOverviewFacts")
     * })
     * @Type("array<BSC\Model\ConsultingOverviewFacts>")
     */
    protected $facts;

    /**
     * overlay content
     *
     * @var string|null
     * @SerializedName("overlay")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $overlay;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->title = isset($data['title']) ? $data['title'] : null;
        $this->headline = isset($data['headline']) ? $data['headline'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
        $this->facts = isset($data['facts']) ? $data['facts'] : null;
        $this->overlay = isset($data['overlay']) ? $data['overlay'] : null;
    }

    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Sets title.
     *
     * @param string|null $title  bubble title (consulting menu)
     *
     * @return $this
     */
    public function setTitle($title = null)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Gets headline.
     *
     * @return string|null
     */
    public function getHeadline()
    {
        return $this->headline;
    }

    /**
     * Sets headline.
     *
     * @param string|null $headline  title of info-card
     *
     * @return $this
     */
    public function setHeadline($headline = null)
    {
        $this->headline = $headline;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  intro text inside info-card / description
     *
     * @return $this
     */
    public function setDescription($description = null)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets facts.
     *
     * @return BSC\Model\ConsultingOverviewFacts[]|null
     */
    public function getFacts()
    {
        return $this->facts;
    }

    /**
     * Sets facts.
     *
     * @param BSC\Model\ConsultingOverviewFacts[]|null $facts  pairs of label, value
     *
     * @return $this
     */
    public function setFacts(ConsultingOverviewFacts $facts = null)
    {
        $this->facts = $facts;

        return $this;
    }

    /**
     * Gets overlay.
     *
     * @return string|null
     */
    public function getOverlay()
    {
        return $this->overlay;
    }

    /**
     * Sets overlay.
     *
     * @param string|null $overlay  overlay content
     *
     * @return $this
     */
    public function setOverlay($overlay = null)
    {
        $this->overlay = $overlay;

        return $this;
    }
}


