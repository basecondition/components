<?php
/**
 * MemberTypes
 *
 * PHP version 5
 *
 * @category Class
 * @package  BSC\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BSC API
 *
 * BSC API
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BSC\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the MemberTypes model.
 *
 * @package BSC\Model
 * @author  Swagger Codegen team
 */
class MemberTypes 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var int|null
     * @SerializedName("priority")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $priority;

    /**
     * @var bool|null
     * @SerializedName("extended_list")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $extendedList;

    /**
     * @var bool|null
     * @SerializedName("hidden")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $hidden;

    /**
     * @var string|null
     * @SerializedName("scope")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $scope;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->priority = isset($data['priority']) ? $data['priority'] : null;
        $this->extendedList = isset($data['extendedList']) ? $data['extendedList'] : null;
        $this->hidden = isset($data['hidden']) ? $data['hidden'] : null;
        $this->scope = isset($data['scope']) ? $data['scope'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets priority.
     *
     * @return int|null
     */
    public function getPriority()
    {
        return $this->priority;
    }

    /**
     * Sets priority.
     *
     * @param int|null $priority
     *
     * @return $this
     */
    public function setPriority($priority = null)
    {
        $this->priority = $priority;

        return $this;
    }

    /**
     * Gets extendedList.
     *
     * @return bool|null
     */
    public function isExtendedList()
    {
        return $this->extendedList;
    }

    /**
     * Sets extendedList.
     *
     * @param bool|null $extendedList
     *
     * @return $this
     */
    public function setExtendedList($extendedList = null)
    {
        $this->extendedList = $extendedList;

        return $this;
    }

    /**
     * Gets hidden.
     *
     * @return bool|null
     */
    public function isHidden()
    {
        return $this->hidden;
    }

    /**
     * Sets hidden.
     *
     * @param bool|null $hidden
     *
     * @return $this
     */
    public function setHidden($hidden = null)
    {
        $this->hidden = $hidden;

        return $this;
    }

    /**
     * Gets scope.
     *
     * @return string|null
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * Sets scope.
     *
     * @param string|null $scope
     *
     * @return $this
     */
    public function setScope($scope = null)
    {
        $this->scope = $scope;

        return $this;
    }
}


