<?php
/**
 * Token
 *
 * PHP version 5
 *
 * @category Class
 * @package  BSC\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BSC API
 *
 * BSC API
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BSC\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Token model.
 *
 * @package BSC\Model
 * @author  Swagger Codegen team
 */
class Token 
{
        /**
     * @var string|null
     * @SerializedName("access_token")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $accessToken;

    /**
     * @var int|null
     * @SerializedName("expires_in")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $expiresIn;

    /**
     * @var string|null
     * @SerializedName("token_type")
     * @Assert\Choice({ "Bearer" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $tokenType;

    /**
     * @var string|null
     * @SerializedName("scope")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $scope;

    /**
     * @var string|null
     * @SerializedName("refresh_token")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $refreshToken;

    /**
     * @var int|null
     * @SerializedName("type")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $type;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accessToken = isset($data['accessToken']) ? $data['accessToken'] : null;
        $this->expiresIn = isset($data['expiresIn']) ? $data['expiresIn'] : null;
        $this->tokenType = isset($data['tokenType']) ? $data['tokenType'] : null;
        $this->scope = isset($data['scope']) ? $data['scope'] : null;
        $this->refreshToken = isset($data['refreshToken']) ? $data['refreshToken'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Gets accessToken.
     *
     * @return string|null
     */
    public function getAccessToken()
    {
        return $this->accessToken;
    }

    /**
     * Sets accessToken.
     *
     * @param string|null $accessToken
     *
     * @return $this
     */
    public function setAccessToken($accessToken = null)
    {
        $this->accessToken = $accessToken;

        return $this;
    }

    /**
     * Gets expiresIn.
     *
     * @return int|null
     */
    public function getExpiresIn()
    {
        return $this->expiresIn;
    }

    /**
     * Sets expiresIn.
     *
     * @param int|null $expiresIn
     *
     * @return $this
     */
    public function setExpiresIn($expiresIn = null)
    {
        $this->expiresIn = $expiresIn;

        return $this;
    }

    /**
     * Gets tokenType.
     *
     * @return string|null
     */
    public function getTokenType()
    {
        return $this->tokenType;
    }

    /**
     * Sets tokenType.
     *
     * @param string|null $tokenType
     *
     * @return $this
     */
    public function setTokenType($tokenType = null)
    {
        $this->tokenType = $tokenType;

        return $this;
    }

    /**
     * Gets scope.
     *
     * @return string|null
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * Sets scope.
     *
     * @param string|null $scope
     *
     * @return $this
     */
    public function setScope($scope = null)
    {
        $this->scope = $scope;

        return $this;
    }

    /**
     * Gets refreshToken.
     *
     * @return string|null
     */
    public function getRefreshToken()
    {
        return $this->refreshToken;
    }

    /**
     * Sets refreshToken.
     *
     * @param string|null $refreshToken
     *
     * @return $this
     */
    public function setRefreshToken($refreshToken = null)
    {
        $this->refreshToken = $refreshToken;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return int|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param int|null $type
     *
     * @return $this
     */
    public function setType($type = null)
    {
        $this->type = $type;

        return $this;
    }
}


