<?php
/**
 * Code
 *
 * PHP version 5
 *
 * @category Class
 * @package  BSC\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BSC API
 *
 * BSC API
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BSC\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Code model.
 *
 * @package BSC\Model
 * @author  Swagger Codegen team
 */
class Code 
{
        /**
     * @var string|null
     * @SerializedName("code")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $code;

    /**
     * (optional) If provided, the code is checked against the given path. If the code refers to an event or sub-path inside the given path, return ist TRUE.
     *
     * @var string|null
     * @SerializedName("path")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $path;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->code = isset($data['code']) ? $data['code'] : null;
        $this->path = isset($data['path']) ? $data['path'] : null;
    }

    /**
     * Gets code.
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Sets code.
     *
     * @param string|null $code
     *
     * @return $this
     */
    public function setCode($code = null)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Gets path.
     *
     * @return string|null
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Sets path.
     *
     * @param string|null $path  (optional) If provided, the code is checked against the given path. If the code refers to an event or sub-path inside the given path, return ist TRUE.
     *
     * @return $this
     */
    public function setPath($path = null)
    {
        $this->path = $path;

        return $this;
    }
}


